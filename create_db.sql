-- generated via DBeaver
-- this uses Postgres

CREATE TABLE action_taken (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id int4 NOT NULL,
  moderator_id int4 NOT NULL,
  logged_at timestamptz NOT NULL,
  action_type text NOT NULL,
  duration_seconds int4 NOT NULL,
  reason text NULL,
  discord_message_id int8 NULL,
  "source" text NOT NULL,
  CONSTRAINT action_taken_pkey PRIMARY KEY (id),
  CONSTRAINT action_taken_performed_by_id_fkey FOREIGN KEY (moderator_id) REFERENCES tracked_user(id),
  CONSTRAINT action_taken_user_id_fkey FOREIGN KEY (user_id) REFERENCES tracked_user(id)
);

CREATE TABLE deleted_action_taken (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id int4 NOT NULL,
  moderator_id int4 NOT NULL,
  logged_at timestamptz NOT NULL,
  action_type text NOT NULL,
  duration_seconds int4 NOT NULL,
  reason text NULL,
  discord_message_id int8 NULL,
  "source" text NOT NULL,
  deleted_by_id int4 NOT NULL,
  deleted_at timestamptz NOT NULL,
  CONSTRAINT deleted_action_taken_pkey PRIMARY KEY (id),
  CONSTRAINT deleted_action_taken_deleted_by_id_fkey FOREIGN KEY (deleted_by_id) REFERENCES tracked_user(id),
  CONSTRAINT deleted_action_taken_performed_by_id_fkey FOREIGN KEY (moderator_id) REFERENCES tracked_user(id),
  CONSTRAINT deleted_action_taken_user_id_fkey FOREIGN KEY (user_id) REFERENCES tracked_user(id)
);

CREATE TABLE discord_username_history (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id int4 NOT NULL,
  logged_at timestamptz NOT NULL,
  username text NOT NULL,
  discriminator text NOT NULL,
  CONSTRAINT discord_username_history_pkey PRIMARY KEY (id),
  CONSTRAINT discord_username_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES tracked_user(id)
);

CREATE TABLE key_value (
  "key" varchar(100) NOT NULL,
  value varchar(250) NOT NULL,
  CONSTRAINT key_value_pkey PRIMARY KEY (key)
);

CREATE TABLE reminder (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  created_at timestamptz NOT NULL,
  fire_at timestamptz NOT NULL,
  user_id int8 NOT NULL,
  channel_id int8 NOT NULL,
  guild_id int8 NULL,
  message text NOT NULL,
  requesting_message_id int8 NOT NULL,
  CONSTRAINT reminder_pkey PRIMARY KEY (id)
);

CREATE TABLE tracked_user (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  twitch_id text NULL,
  discord_id int8 NULL,
  is_moderator bool NOT NULL,
  CONSTRAINT tracked_user_pkey PRIMARY KEY (id)
);

CREATE TABLE twitch_live_stream (
  twitch_user_id varchar(50) NOT NULL,
  twitch_stream_id varchar(50) NOT NULL,
  started_at timestamptz NOT NULL,
  first_offline_at timestamptz NULL,
  twitch_login varchar(50) NOT NULL,
  twitch_display_name varchar(50) NOT NULL,
  viewer_count int4 NOT NULL,
  title varchar(200) NOT NULL,
  game_name varchar(300) NOT NULL,
  game_id varchar(50) NOT NULL,
  thumbnail_url varchar(350) NOT NULL,
  profile_image_url varchar(350) NOT NULL,
  CONSTRAINT twitch_live_stream_pkey PRIMARY KEY (twitch_user_id)
);

CREATE TABLE twitch_stream_to_check (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  twitch_id text NOT NULL,
  username text NOT NULL,
  message_to_post text NULL,
  channel_id int8 NOT NULL,
  guild_id int8 NOT NULL,
  is_embedded bool NOT NULL,
  is_deleted bool NOT NULL,
  current_message_id int8 NULL,
  CONSTRAINT twitch_stream_to_check_pkey PRIMARY KEY (id)
);

CREATE TABLE twitch_username_history (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id int4 NOT NULL,
  logged_at timestamptz NOT NULL,
  username text NOT NULL,
  CONSTRAINT twitch_username_history_pkey PRIMARY KEY (id),
  CONSTRAINT twitch_username_history_user_id_fkey FOREIGN KEY (user_id) REFERENCES tracked_user(id)
);

CREATE TABLE twitter_to_check (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  twitter_username text NOT NULL,
  twitter_id int8 NOT NULL,
  include_retweets bool NOT NULL,
  discord_guild_id int8 NOT NULL,
  discord_channel_id int8 NOT NULL,
  latest_tweet_id int8 NOT NULL,
  CONSTRAINT twitter_to_check_pkey PRIMARY KEY (id)
);

CREATE TABLE user_alias (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id int4 NOT NULL,
  moderator_id int4 NOT NULL,
  added_at timestamptz NOT NULL,
  alias text NOT NULL,
  CONSTRAINT user_alias_pkey PRIMARY KEY (id),
  CONSTRAINT user_alias_added_by_id_fkey FOREIGN KEY (moderator_id) REFERENCES tracked_user(id),
  CONSTRAINT user_alias_user_id_fkey FOREIGN KEY (user_id) REFERENCES tracked_user(id)
);

CREATE TABLE user_note (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  user_id int4 NOT NULL,
  moderator_id int4 NOT NULL,
  logged_at timestamptz NOT NULL,
  note text NOT NULL,
  CONSTRAINT user_note_pkey PRIMARY KEY (id),
  CONSTRAINT user_note_taken_by_id_fkey FOREIGN KEY (moderator_id) REFERENCES tracked_user(id),
  CONSTRAINT user_note_user_id_fkey FOREIGN KEY (user_id) REFERENCES tracked_user(id)
);

CREATE TABLE youtube_channel_to_check (
  id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  username text NOT NULL,
  discord_guild_id int8 NOT NULL,
  discord_channel_id int8 NOT NULL,
  discord_message_to_post text NULL,
  youtube_channel_id text NOT NULL,
  youtube_playlist_id text NOT NULL,
  is_deleted bool NOT NULL,
  latest_video_id text NULL,
  latest_video_uploaded_at timestamptz NULL,
  discord_message_id int8 NULL,
  CONSTRAINT youtube_channel_to_check_pkey PRIMARY KEY (id)
);
